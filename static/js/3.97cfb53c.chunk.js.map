{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/user_image_male.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","__webpack_require__","d","__webpack_exports__","module","exports","p","descriptionBlock","mainPhoto","contact","postsBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatusTC","autoFocus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","classes","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhotoTC","saveProfileTC","preloader","src","photos","large","userPhoto","alt","target","files","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likeCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","MyPosts_Post_Post","id","AddNewPostReduxForm","values","addPost","newPostText","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfileThunkCreator","getStatusThunkCreator","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.97cfb53c.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = __webpack_public_path__ + \"static/media/user_image_male.04867da4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1SgK6\",\"mainPhoto\":\"ProfileInfo_mainPhoto__cY-tp\",\"contact\":\"ProfileInfo_contact__1c7EA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1ucB6\",\"posts\":\"MyPosts_posts__3Duam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2BDQj\"};","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusTC(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                Status: <span onDoubleClick={activateEditMode} >{status || \"----------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport s from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                Full Name: {createField(\"Full Name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                Looking for a job: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                My professional\r\n                skills: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                About me: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={classes.contact}>\r\n                    {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user_image_male.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusTC, isOwner, savePhotoTC, saveProfileTC}) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif(!profile) {\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\tconst mainPhotoSelectedOn = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhotoTC(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tsaveProfileTC(formData).then(\r\n\t\t\t() => {\r\n\t\t\t\tsetEditMode(false);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto}  className={classes.mainPhoto} alt={\"img\"}/>\r\n\t\t\t\t{isOwner && <input type={\"file\"} onChange={mainPhotoSelectedOn}/>}\r\n\t\t\t\t{editMode\r\n\t\t\t\t\t? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n\t\t\t\t\t: <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n\t\t\t\t<ProfileStatusWithHooks status={status}\r\n\t\t\t\t\t\t\t\t\t\tupdateStatusTC={updateStatusTC}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isOwner && <div>\r\n\t\t\t\t<button onClick={goToEditMode}>edit</button>\r\n\t\t\t</div>}\r\n\t\t\t<div>\r\n\t\t\t\tFull Name: {profile.fullName}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tLooking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n\t\t\t</div>\r\n\t\t\t{profile.lookingForAJob &&\r\n\t\t\t<div>\r\n\t\t\t\tMy professional skills: {profile.lookingForAJobDescription}\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\tAbout me: {profile.aboutMe}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tContacts: {Object.keys(profile.contacts).map(key => {\r\n\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\treturn (\r\n\t\t<div className={classes.contact}>\r\n\t\t\t{contactTitle}: {contactValue}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\treturn(\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://amp.businessinsider.com/images/5cc300804a16757b2777a049-750-421.jpg\" alt=\"\"/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>Like </span>{props.likeCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>);\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post message\"}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\treturn dispatch(addPostActionCreator(newPostText));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo savePhotoTC={props.savePhotoTC}\r\n\t\t\t\t\t\t isOwner={props.isOwner}\r\n\t\t\t\t\t\t profile={props.profile}\r\n\t\t\t\t\t\t status={props.status}\r\n\t\t\t\t\t\t updateStatusTC={props.updateStatusTC}\r\n\t\t\t\t\t\t saveProfileTC={props.saveProfileTC}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusThunkCreator, getUserProfileThunkCreator, updateStatusTC, savePhotoTC, saveProfileTC} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId);\r\n        this.props.getStatusThunkCreator(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatusTC={this.props.updateStatusTC}\r\n                         savePhotoTC={this.props.savePhotoTC}\r\n                         saveProfileTC={this.props.saveProfileTC}/>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfileThunkCreator, getStatusThunkCreator, updateStatusTC, savePhotoTC, saveProfileTC}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}